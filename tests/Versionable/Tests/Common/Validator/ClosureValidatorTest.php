<?php

namespace Versionable\Tests\Common\Validator;

use Versionable\Common\Validator\ClosureValidator;
use Versionable\Common\Collection\MockComparableItem;

/**
 * Test class for ClosureValidator.
 * Generated by PHPUnit on 2012-07-18 at 17:41:20.
 */
class ClosureValidatorTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ClosureValidator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ClosureValidator(function($value) {
                            return $value instanceof \stdClass;
                        });
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    public function testConstruct()
    {

    }

    public function isValidProvider()
    {
        return array(
            array(new \stdClass(), true),
            array(new MockComparableItem('test'), false),
            array('a', false),
        );
    }

    /**
     * @covers Versionable\Common\Validator\ClosureValidator::isValid
     * @dataProvider isValidProvider
     */
    public function testIsValid($value, $expected)
    {
        $this->assertEquals($expected, $this->object->isValid($value));
    }

    /**
     * @covers Versionable\Common\Validator\ClosureValidator::getClosure
     * @covers Versionable\Common\Validator\ClosureValidator::setClosure
     */
    public function testGetSetClosure()
    {
        $closure = function($value) {
                    return $value instanceof MockComparableItem;
                };

        $this->object->setClosure($closure);

        $this->assertEquals($closure, $this->object->getClosure());
    }

}
